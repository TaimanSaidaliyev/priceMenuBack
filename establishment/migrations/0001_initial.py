# Generated by Django 4.2.11 on 2024-03-23 12:19

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=99, verbose_name='Город')),
                ('coordinate_w', models.FloatField(default=0, verbose_name='Ширина')),
                ('coordinate_h', models.FloatField(default=0, verbose_name='Долгота')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата публикации')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
            ],
            options={
                'verbose_name': 'Город',
                'verbose_name_plural': 'Город',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=99, verbose_name='Страна')),
                ('coordinate_w', models.FloatField(default=0, verbose_name='Ширина')),
                ('coordinate_h', models.FloatField(default=0, verbose_name='Долгота')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата публикации')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
            ],
            options={
                'verbose_name': 'Страна',
                'verbose_name_plural': 'Страна',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Establishment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=99, verbose_name='Название заведения')),
                ('default_color', models.CharField(max_length=7, verbose_name='Цвет заведения')),
                ('secondary_color', models.BooleanField(default=True, verbose_name='Вторичный цвет (Белый)')),
                ('description', models.TextField(max_length=500, verbose_name='Описание заведения')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата публикации')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('photo', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d', verbose_name='Изображение')),
                ('backgroundImage', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d', verbose_name='Фоновое изображение')),
                ('is_published', models.BooleanField(default=True, verbose_name='Опубликовано')),
                ('rating', models.FloatField(default=0, verbose_name='Рейтинг заведения')),
                ('coordinate_w', models.FloatField(default=0, verbose_name='Ширина')),
                ('coordinate_h', models.FloatField(default=0, verbose_name='Долгота')),
                ('address', models.CharField(max_length=2000, verbose_name='Адрес заведения')),
                ('workTime', models.CharField(max_length=99, verbose_name='Режим работы заведения')),
                ('phoneNumber', models.CharField(max_length=99, verbose_name='Телефон')),
                ('menu_view_type', models.CharField(choices=[('Square', 'Квадратные плиты'), ('List', 'Списком')], default='List', max_length=10, verbose_name='Вид меню')),
                ('until_date', models.DateField(blank=True, default=datetime.date(2024, 1, 1), verbose_name='Дата истечения срока')),
                ('city', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='shop_city', to='establishment.city', verbose_name='Город')),
            ],
            options={
                'verbose_name': 'Заведение',
                'verbose_name_plural': 'Заведение',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('menu_title', models.CharField(db_index=True, max_length=100, verbose_name='Меню')),
                ('photo', models.ImageField(blank=True, upload_to='photos/category/%Y/%m/%d', verbose_name='Изображение')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата публикации')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('sorting_number', models.IntegerField(blank=True, default=0, null=True, verbose_name='Порядок сортировки')),
                ('establishment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='get_menu_establishment', to='establishment.establishment', verbose_name='Заведение')),
            ],
            options={
                'verbose_name': 'Меню заведения',
                'verbose_name_plural': 'Меню заведения',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MenuCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_title', models.CharField(db_index=True, max_length=100, verbose_name='Категории')),
                ('photo', models.ImageField(blank=True, upload_to='photos/category/%Y/%m/%d', verbose_name='Изображение')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата публикации')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('sorting_number', models.IntegerField(blank=True, default=0, null=True, verbose_name='Порядок сортировки')),
                ('establishment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='get_menu_category_establishment', to='establishment.establishment', verbose_name='Заведение')),
                ('menu', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='get_menu_category_menu', to='establishment.menu', verbose_name='Меню')),
            ],
            options={
                'verbose_name': 'Категория меню',
                'verbose_name_plural': 'Категория меню',
                'ordering': ['-category_title'],
            },
        ),
        migrations.CreateModel(
            name='PremiumStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=99, verbose_name='Название статуса')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата публикации')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
            ],
            options={
                'verbose_name': 'Статус заведения',
                'verbose_name_plural': 'Статус заведения',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TypeOfEstablishment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=100, verbose_name='Тип заведения')),
                ('photo', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d', verbose_name='Изображение')),
            ],
            options={
                'verbose_name': 'Тип заведения',
                'verbose_name_plural': 'Тип заведения',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Promotions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=100, verbose_name='Название акции')),
                ('description', models.TextField(db_index=True, max_length=300, verbose_name='Описание акции')),
                ('photo', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d', verbose_name='Изображение')),
                ('until_date', models.DateField(verbose_name='Дата истечения срока')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата публикации')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('promotion_type', models.CharField(choices=[('Banner', 'Баннер'), ('Label', 'Надпись')], default='Banner', max_length=10, verbose_name='Тип акции')),
                ('establishment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='get_promotions_establishment', to='establishment.establishment', verbose_name='Заведение')),
            ],
            options={
                'verbose_name': 'Акции',
                'verbose_name_plural': 'Акции',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=99, verbose_name='Название блюда')),
                ('description', models.TextField(max_length=500, verbose_name='Описание блюда')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата публикации')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('price', models.FloatField(default=0, verbose_name='Текущая цена')),
                ('old_price', models.FloatField(default=0, verbose_name='Старая цена')),
                ('photo', models.ImageField(blank=True, upload_to='photo/products/%Y/%m/%d', verbose_name='Изображение')),
                ('is_published', models.BooleanField(default=True, verbose_name='Опубликовано')),
                ('is_active', models.BooleanField(default=True, verbose_name='Есть на кухне')),
                ('sorting_number', models.IntegerField(blank=True, default=0, null=True, verbose_name='Порядок сортировки')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='get_products_menu_category', to='establishment.menucategory', verbose_name='Категория')),
                ('establishment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='get_products_establishment', to='establishment.establishment', verbose_name='Заведение')),
            ],
            options={
                'verbose_name': 'Блюда',
                'verbose_name_plural': 'Блюда',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='establishment',
            name='premium_status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='get_establishment_status', to='establishment.premiumstatus', verbose_name='Премиум статус заведения'),
        ),
        migrations.AddField(
            model_name='establishment',
            name='type_of_establishment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='get_type_of_establishment', to='establishment.typeofestablishment', verbose_name='Тип заведения'),
        ),
        migrations.AddField(
            model_name='city',
            name='country',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='city_country', to='establishment.country', verbose_name='Страна'),
        ),
    ]
